# links:
# https://stackoverflow.com/questions/60387843/having-a-sprite-follow-a-line-of-a-specific-color-pygame
import pygame as pg
#83b925 - number for green
#7f7f7f - number for grey

pg.init() 
background = pg.transform.smoothscale(pg.image.load("green.png"), (1370,710))
bg_size = background.get_size()
screen = pg.display.set_mode(bg_size)
screen.blit(background, (0, 0))
overground = pg.transform.smoothscale(pg.image.load("track.png"), (1370,710))
track_size = overground.get_size()
track = pg.display.set_mode(track_size)
pg.display.set_caption("First Game")

screenWidth = 1370
x = 20 
y = 440
width = 34
height = 56
vel = 10
left = False
right = False
up = False
down = False

#Current images do not work, need to find compatible sprites
walkRight = pg.image.load("R1.png")
walkLeft = pg.image.load("L1.png")
walkUp = pg.image.load("U1.png")
walkDown = pg.image.load("D1.png")

def redrawGameWindow():
    # Reformats background image to fit screen size
    screen.blit(background, (0, 0))
    screen.blit(overground, (0, 0))
    if left == True:
        screen.blit(walkLeft, (x,y))    
    elif right == True:
        screen.blit(walkRight, (x,y))
    elif up == True:
        screen.blit(walkUp, (x,y))
    elif down == True:
        screen.blit(walkDown, (x,y))
    #else:
       # screen.blit(walkRight, (x,y))
    pg.display.update()

run = True
while run:
    pg.time.delay(100)
    
    for event in pg.event.get():
        if event.type == pg.QUIT:
            run = False
    
    keys = pg.key.get_pressed()
    if keys[pg.K_LEFT] and x > vel: 
        x-= vel
        left = True
        right = False
        up = False
        down = False

    if keys[pg.K_RIGHT] and x < screenWidth - width - vel: 
        x+= vel
        left = False
        right = True
        up = False
        down = False

    if keys[pg.K_UP] and y > vel: 
        y-= vel
        left = False
        right = False
        up = True
        down = False
        
    if keys[pg.K_DOWN] and y < screenWidth - height - vel:
        y += vel
        left = False
        right = False
        up = False
        down = True
    #else:
       # left = False
       # right = False
       # up = False
       # down = False
    redrawGameWindow()
pg.quit()
